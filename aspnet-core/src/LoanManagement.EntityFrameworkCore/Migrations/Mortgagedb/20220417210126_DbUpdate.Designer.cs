// <auto-generated />
using System;
using LoanManagement.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanManagement.Migrations.Mortgagedb
{
    [DbContext(typeof(MortgagedbContext))]
    [Migration("20220417210126_DbUpdate")]
    partial class DbUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("LoanManagement.Entities.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("AgencyCaseNoB2")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("AGENCY_CASE_NO_B2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AgencyCaseNoB2"), "utf8mb3");

                    b.Property<int>("CreditTypeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("CREDIT_TYPE_ID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("DATE");

                    b.Property<string>("Initials")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("INITIALS")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Initials"), "utf8mb3");

                    b.Property<string>("LoanNoIdentifierB1B3")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LOAN NO_IDENTIFIER_B1_B3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LoanNoIdentifierB1B3"), "utf8mb3");

                    b.Property<int?>("TotalBorrowers1a6")
                        .HasColumnType("int(11)")
                        .HasColumnName("TOTAL_BORROWERS_1A.6");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CreditTypeId" }, "CREDIT_TYPE_ID");

                    b.ToTable("applications", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationAdditionalEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("CityId")
                        .HasColumnType("int(11)")
                        .HasColumnName("CITY_ID");

                    b.Property<int>("CountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("COUNTRY_ID");

                    b.Property<string>("EmployerBusinessName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMPLOYER/BUSINESS_NAME")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("EmployerBusinessName"), "utf8mb3");

                    b.Property<ulong?>("IsEmployedBySomeone")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_EMPLOYED_BY_SOMEONE");

                    b.Property<ulong?>("IsOwnershipLessThan25")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_OWNERSHIP_LESS_THAN_25");

                    b.Property<ulong?>("IsSelfEmployed")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_SELF_EMPLOYED");

                    b.Property<float?>("MonthlyIncome")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_INCOME");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PHONE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Phone"), "utf8mb3");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("POSITION_TITLE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PositionTitle"), "utf8mb3");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("START_DATE");

                    b.Property<int>("StateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("STATE_ID");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("STREET")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Street"), "utf8mb3");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UNIT")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Unit"), "utf8mb3");

                    b.Property<int?>("WorkingMonths")
                        .HasColumnType("int(11)")
                        .HasColumnName("WORKING_MONTHS");

                    b.Property<int?>("WorkingYears")
                        .HasColumnType("int(11)")
                        .HasColumnName("WORKING_YEARS");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ZIP")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Zip"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID");

                    b.HasIndex(new[] { "CityId" }, "CITY_ID");

                    b.HasIndex(new[] { "CountryId" }, "COUNTRY_ID");

                    b.HasIndex(new[] { "StateId" }, "STATE_ID");

                    b.ToTable("application_additional_employement_details", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationAdditionalEmployementIncomeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<float?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<int>("ApplicationAdditionalEmployementDetails")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_ADDITIONAL_EMPLOYEMENT_DETAILS");

                    b.Property<int>("IncomeTypeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("INCOME_TYPE_ID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationAdditionalEmployementDetails" }, "APPLICATION_ADDITIONAL_EMPLOYEMENT_DETAILS");

                    b.HasIndex(new[] { "IncomeTypeId" }, "INCOME_TYPE_ID");

                    b.ToTable("application_additional_employement_income_details", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationDeclarationQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int?>("DeclarationQuestionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("DECLARATION_QUESTION_ID");

                    b.Property<string>("Description5a")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION_5A")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Description5a"), "utf8mb3");

                    b.Property<ulong?>("YesNo")
                        .HasColumnType("bit(1)")
                        .HasColumnName("YES_NO");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID1");

                    b.HasIndex(new[] { "DeclarationQuestionId" }, "DECLARATION_QUESTION_ID");

                    b.ToTable("application_declaration_questions", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("CityId1b43")
                        .HasColumnType("int(11)")
                        .HasColumnName("CITY_ID_1B.4.3");

                    b.Property<int>("CountryId1b46")
                        .HasColumnType("int(11)")
                        .HasColumnName("COUNTRY_ID_1B.4.6");

                    b.Property<string>("EmployerBusinessName1b2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMPLOYER/BUSINESS_NAME_1B.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("EmployerBusinessName1b2"), "utf8mb3");

                    b.Property<ulong?>("IsEmployedBySomeone1b8")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_EMPLOYED_BY_SOMEONE_1B.8");

                    b.Property<ulong?>("IsOwnershipLessThan251b91")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_OWNERSHIP_LESS_THAN_25_1B.9.1");

                    b.Property<ulong?>("IsSelfEmployed1b9")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_SELF_EMPLOYED_1B.9");

                    b.Property<float?>("MonthlyIncome1b92")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_INCOME_1B.9.2");

                    b.Property<string>("Phone1b3")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PHONE_1B.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Phone1b3"), "utf8mb3");

                    b.Property<string>("PositionTitle1b5")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("POSITION_TITLE_1B.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PositionTitle1b5"), "utf8mb3");

                    b.Property<DateTime?>("StartDate1b6")
                        .HasColumnType("datetime")
                        .HasColumnName("START_DATE_1B.6");

                    b.Property<int>("StateId1b44")
                        .HasColumnType("int(11)")
                        .HasColumnName("STATE_ID_1B.4.4");

                    b.Property<string>("Street1b41")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("STREET_1B.4.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Street1b41"), "utf8mb3");

                    b.Property<string>("Unit1b42")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UNIT_1B.4.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Unit1b42"), "utf8mb3");

                    b.Property<int?>("WorkingMonths")
                        .HasColumnType("int(11)")
                        .HasColumnName("WORKING_MONTHS");

                    b.Property<int?>("WorkingYears1b7")
                        .HasColumnType("int(11)")
                        .HasColumnName("WORKING_YEARS_1B.7");

                    b.Property<string>("Zip1b45")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ZIP_1B.4.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Zip1b45"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID2");

                    b.HasIndex(new[] { "CityId1b43" }, "CITY_ID_1B.4.3");

                    b.HasIndex(new[] { "CountryId1b46" }, "COUNTRY_ID_1B.4.6");

                    b.HasIndex(new[] { "StateId1b44" }, "STATE_ID_1B.4.4");

                    b.ToTable("application_employement_details", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationEmployementIncomeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<float?>("Amount1b10")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT_1B.10");

                    b.Property<int>("ApplicationEmployementDetailsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_EMPLOYEMENT_DETAILS_ID");

                    b.Property<int>("IncomeTypeId1b101")
                        .HasColumnType("int(11)")
                        .HasColumnName("INCOME_TYPE_ID_1B.10.1");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationEmployementDetailsId" }, "APPLICATION_EMPLOYEMENT_DETAILS_ID");

                    b.HasIndex(new[] { "IncomeTypeId1b101" }, "INCOME_TYPE_ID_1B.10.1");

                    b.ToTable("application_employement_income_details", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("AccountNumber2a3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ACCOUNT_NUMBER_2A.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AccountNumber2a3"), "utf8mb3");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("FinancialAccountTypeId2a1")
                        .HasColumnType("int(11)")
                        .HasColumnName("FINANCIAL_ACCOUNT_TYPE_ID_2A.1");

                    b.Property<string>("FinancialInstitution2a2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FINANCIAL_INSTITUTION_2A.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FinancialInstitution2a2"), "utf8mb3");

                    b.Property<float?>("Value2a4")
                        .HasColumnType("float")
                        .HasColumnName("VALUE_2A.4");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID3");

                    b.HasIndex(new[] { "FinancialAccountTypeId2a1" }, "FINANCIAL_ACCOUNT_TYPE_ID_2A.1");

                    b.ToTable("application_financial_assets", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialLaibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("AccountNumber2c3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ACCOUNT_NUMBER_2C.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AccountNumber2c3"), "utf8mb3");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<string>("CompanyName2c2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COMPANY_NAME_2C.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CompanyName2c2"), "utf8mb3");

                    b.Property<int>("FinancialLaibilitiesType2c1")
                        .HasColumnType("int(11)")
                        .HasColumnName("FINANCIAL_LAIBILITIES_TYPE_2C.1");

                    b.Property<float?>("MonthlyValue2c6")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_VALUE_2C.6");

                    b.Property<ulong?>("PaidOff2c5")
                        .HasColumnType("bit(1)")
                        .HasColumnName("PAID_OFF_2C.5");

                    b.Property<float?>("UnpaidBalance2c4")
                        .HasColumnType("float")
                        .HasColumnName("UNPAID_BALANCE_2C.4");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID4");

                    b.HasIndex(new[] { "FinancialLaibilitiesType2c1" }, "FINANCIAL_LAIBILITIES_TYPE_2C.1");

                    b.ToTable("application_financial_laibilities", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialOtherAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("FinancialAssetsTypesId2b1")
                        .HasColumnType("int(11)")
                        .HasColumnName("FINANCIAL_ASSETS_TYPES_ID_2B.1");

                    b.Property<float?>("Value2b2")
                        .HasColumnType("float")
                        .HasColumnName("VALUE_2B.2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID5");

                    b.HasIndex(new[] { "FinancialAssetsTypesId2b1" }, "FINANCIAL_ASSETS_TYPES_ID_2B.1");

                    b.ToTable("application_financial_other_assets", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialOtherLaibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("FinancialOtherLaibilitiesTypeId2d1")
                        .HasColumnType("int(11)")
                        .HasColumnName("FINANCIAL_OTHER_LAIBILITIES_TYPE_ID_2D.1");

                    b.Property<float?>("MonthlyPayment2d2")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_PAYMENT_2D.2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID6");

                    b.HasIndex(new[] { "FinancialOtherLaibilitiesTypeId2d1" }, "FINANCIAL_OTHER_LAIBILITIES_TYPE_ID_2D.1");

                    b.ToTable("application_financial_other_laibilities", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialRealEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("CityId3a23")
                        .HasColumnType("int(11)")
                        .HasColumnName("CITY_ID_3A.2.3");

                    b.Property<int>("CountryId3a26")
                        .HasColumnType("int(11)")
                        .HasColumnName("COUNTRY_ID_3A.2.6");

                    b.Property<int>("FinancialPropertyIntendedOccupancyId3a5")
                        .HasColumnType("int(11)")
                        .HasColumnName("FINANCIAL_PROPERTY_INTENDED_OCCUPANCY_ID_3A.5");

                    b.Property<int>("FinancialPropertyStatusId3a4")
                        .HasColumnType("int(11)")
                        .HasColumnName("FINANCIAL_PROPERTY_STATUS_ID_3A.4");

                    b.Property<float?>("MonthlyMortagePayment3a6")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_MORTAGE_PAYMENT_3A.6");

                    b.Property<float?>("MonthlyRentalIncome3a7")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_RENTAL_INCOME_3A.7");

                    b.Property<float?>("NetMonthlyRentalIncome3a8")
                        .HasColumnType("float")
                        .HasColumnName("NET_MONTHLY_RENTAL_INCOME_3A.8");

                    b.Property<float?>("PropertyValue3a3")
                        .HasColumnType("float")
                        .HasColumnName("PROPERTY_VALUE_3A.3");

                    b.Property<int>("StateId3a24")
                        .HasColumnType("int(11)")
                        .HasColumnName("STATE_ID_3A.2.4");

                    b.Property<string>("Street3a21")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("STREET_3A.2.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Street3a21"), "utf8mb3");

                    b.Property<string>("UnitNo3a22")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UNIT_NO_3A.2.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("UnitNo3a22"), "utf8mb3");

                    b.Property<string>("Zip3a25")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ZIP_3A.2.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Zip3a25"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID7");

                    b.HasIndex(new[] { "CityId3a23" }, "CITY_ID_3A.2.3");

                    b.HasIndex(new[] { "CountryId3a26" }, "COUNTRY_ID_3A.2.6");

                    b.HasIndex(new[] { "FinancialPropertyIntendedOccupancyId3a5" }, "FINANCIAL_PROPERTY_INTENDED_OCCUPANCY_ID_3A.5");

                    b.HasIndex(new[] { "FinancialPropertyStatusId3a4" }, "FINANCIAL_PROPERTY_STATUS_ID_3A.4");

                    b.HasIndex(new[] { "StateId3a24" }, "STATE_ID_3A.2.4");

                    b.ToTable("application_financial_real_estate", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationIncomeSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<float?>("Amount1e2")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT_1E.2");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("IncomeSourceId1e1")
                        .HasColumnType("int(11)")
                        .HasColumnName("INCOME_SOURCE_ID_1E.1");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID8");

                    b.HasIndex(new[] { "IncomeSourceId1e1" }, "INCOME_SOURCE_ID_1E.1");

                    b.ToTable("application_income_sources", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationPersonalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("Ages1a81")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AGES_1A.8.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Ages1a81"), "utf8mb3");

                    b.Property<string>("AlternateFirstName1a21")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ALTERNATE_FIRST_NAME_1A.2.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AlternateFirstName1a21"), "utf8mb3");

                    b.Property<string>("AlternateLastName1a23")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ALTERNATE_LAST_NAME_1A.2.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AlternateLastName1a23"), "utf8mb3");

                    b.Property<string>("AlternateMiddleName1a22")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ALTERNATE_MIDDLE_NAME_1A.2.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AlternateMiddleName1a22"), "utf8mb3");

                    b.Property<string>("AlternateSuffix1a24")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ALTERNATE_SUFFIX_1A.2.4")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AlternateSuffix1a24"), "utf8mb3");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_ID");

                    b.Property<string>("CellPhone1a10")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CELL_PHONE_1A.10")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CellPhone1a10"), "utf8mb3");

                    b.Property<int>("CitizenshipTypeId1a5")
                        .HasColumnType("int(11)")
                        .HasColumnName("CITIZENSHIP_TYPE_ID_1A.5");

                    b.Property<int>("CurrentCityId1a133")
                        .HasColumnType("int(11)")
                        .HasColumnName("CURRENT_CITY_ID_1A.13.3");

                    b.Property<int>("CurrentCountryId1a136")
                        .HasColumnType("int(11)")
                        .HasColumnName("CURRENT_COUNTRY_ID_1A.13.6");

                    b.Property<int>("CurrentHousingTypeId1a141")
                        .HasColumnType("int(11)")
                        .HasColumnName("CURRENT_HOUSING_TYPE_ID_1A.14.1");

                    b.Property<int?>("CurrentMonths1a15")
                        .HasColumnType("int(11)")
                        .HasColumnName("CURRENT_MONTHS_1A.15");

                    b.Property<float?>("CurrentRent1a142")
                        .HasColumnType("float")
                        .HasColumnName("CURRENT_RENT_1A.14.2");

                    b.Property<int>("CurrentStateId1a134")
                        .HasColumnType("int(11)")
                        .HasColumnName("CURRENT_STATE_ID_1A.13.4");

                    b.Property<string>("CurrentStreet1a131")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CURRENT_STREET_1A.13.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CurrentStreet1a131"), "utf8mb3");

                    b.Property<string>("CurrentUnit1a132")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CURRENT_UNIT_1A.13.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CurrentUnit1a132"), "utf8mb3");

                    b.Property<int?>("CurrentYears1a14")
                        .HasColumnType("int(11)")
                        .HasColumnName("CURRENT_YEARS_1A.14");

                    b.Property<string>("CurrentZip1a135")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CURRENT_ZIP_1A.13.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CurrentZip1a135"), "utf8mb3");

                    b.Property<int?>("Dependents1a8")
                        .HasColumnType("int(11)")
                        .HasColumnName("DEPENDENTS_1A.8");

                    b.Property<DateTime?>("Dob1a4")
                        .HasColumnType("datetime")
                        .HasColumnName("DOB_1A.4");

                    b.Property<string>("Email1a12")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL_1A.12")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Email1a12"), "utf8mb3");

                    b.Property<string>("Ext1a111")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("EXT_1A.11.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Ext1a111"), "utf8mb3");

                    b.Property<string>("FirstName1a1")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FIRST_NAME_1A.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FirstName1a1"), "utf8mb3");

                    b.Property<int>("FormerCityId1a153")
                        .HasColumnType("int(11)")
                        .HasColumnName("FORMER_CITY_ID_1A.15.3");

                    b.Property<int>("FormerCountryId1a156")
                        .HasColumnType("int(11)")
                        .HasColumnName("FORMER_COUNTRY_ID_1A.15.6");

                    b.Property<int>("FormerHousingTypeId1a161")
                        .HasColumnType("int(11)")
                        .HasColumnName("FORMER_HOUSING_TYPE_ID_1A.16.1");

                    b.Property<int?>("FormerMonths1a161")
                        .HasColumnType("int(11)")
                        .HasColumnName("FORMER_MONTHS_1A.16.1");

                    b.Property<float?>("FormerRent1a162")
                        .HasColumnType("float")
                        .HasColumnName("FORMER_RENT_1A.16.2");

                    b.Property<int>("FormerStateId1a154")
                        .HasColumnType("int(11)")
                        .HasColumnName("FORMER_STATE_ID_1A.15.4");

                    b.Property<string>("FormerStreet1a151")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FORMER_STREET_1A.15.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FormerStreet1a151"), "utf8mb3");

                    b.Property<string>("FormerUnit1a152")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("FORMER_UNIT_1A.15.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FormerUnit1a152"), "utf8mb3");

                    b.Property<int?>("FormerYears1a16")
                        .HasColumnType("int(11)")
                        .HasColumnName("FORMER_YEARS_1A.16");

                    b.Property<string>("FormerZip1a155")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("FORMER_ZIP_1A.15.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FormerZip1a155"), "utf8mb3");

                    b.Property<string>("HomePhone1a9")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("HOME_PHONE_1A.9")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("HomePhone1a9"), "utf8mb3");

                    b.Property<string>("LastName1a3")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("LAST_NAME_1A.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LastName1a3"), "utf8mb3");

                    b.Property<int>("MailingCityId1a173")
                        .HasColumnType("int(11)")
                        .HasColumnName("MAILING_CITY_ID_1A.17.3");

                    b.Property<int>("MailingCountryId1a176")
                        .HasColumnType("int(11)")
                        .HasColumnName("MAILING_COUNTRY_ID_1A.17.6");

                    b.Property<int>("MailingStateId1a174")
                        .HasColumnType("int(11)")
                        .HasColumnName("MAILING_STATE_ID_1A.17.4");

                    b.Property<string>("MailingStreet1a171")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MAILING_STREET_1A.17.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("MailingStreet1a171"), "utf8mb3");

                    b.Property<string>("MailingUnit1a172")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MAILING_UNIT_1A.17.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("MailingUnit1a172"), "utf8mb3");

                    b.Property<string>("MailingZip1a175")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("MAILING_ZIP_1A.17.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("MailingZip1a175"), "utf8mb3");

                    b.Property<int>("MaritialStatusId1a7")
                        .HasColumnType("int(11)")
                        .HasColumnName("MARITIAL_STATUS_ID_1A.7");

                    b.Property<string>("MiddleName1a2")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("MIDDLE_NAME_1A.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("MiddleName1a2"), "utf8mb3");

                    b.Property<string>("Ssn1a3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SSN_1A.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Ssn1a3"), "utf8mb3");

                    b.Property<string>("Suffix1a4")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("SUFFIX_1A.4")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Suffix1a4"), "utf8mb3");

                    b.Property<string>("WorkPhone1a11")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("WORK_PHONE_1A.11")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("WorkPhone1a11"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationId" }, "APPLICATION_ID");

                    b.HasIndex(new[] { "CitizenshipTypeId1a5" }, "CITIZENSHIP_TYPE_ID_1A.5");

                    b.HasIndex(new[] { "CurrentCityId1a133" }, "CURRENT_CITY_ID_1A.13.3");

                    b.HasIndex(new[] { "CurrentCountryId1a136" }, "CURRENT_COUNTRY_ID_1A.13.6");

                    b.HasIndex(new[] { "CurrentHousingTypeId1a141" }, "CURRENT_HOUSING_TYPE_ID_1A.14.1");

                    b.HasIndex(new[] { "CurrentStateId1a134" }, "CURRENT_STATE_ID_1A.13.4");

                    b.HasIndex(new[] { "FormerCityId1a153" }, "FORMER_CITY_ID_1A.15.3");

                    b.HasIndex(new[] { "FormerCountryId1a156" }, "FORMER_COUNTRY_ID_1A.15.6");

                    b.HasIndex(new[] { "FormerHousingTypeId1a161" }, "FORMER_HOUSING_TYPE_ID_1A.16.1");

                    b.HasIndex(new[] { "FormerStateId1a154" }, "FORMER_STATE_ID_1A.15.4");

                    b.HasIndex(new[] { "MailingCityId1a173" }, "MAILING_CITY_ID_1A.17.3");

                    b.HasIndex(new[] { "MailingCountryId1a176" }, "MAILING_COUNTRY_ID_1A.17.6");

                    b.HasIndex(new[] { "MailingStateId1a174" }, "MAILING_STATE_ID_1A.17.4");

                    b.HasIndex(new[] { "MaritialStatusId1a7" }, "MARITIAL_STATUS_ID_1A.7");

                    b.ToTable("application_personal_information", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationPreviousEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("CityId1d33")
                        .HasColumnType("int(11)")
                        .HasColumnName("CITY_ID_1D.3.3");

                    b.Property<int>("CountryId1d36")
                        .HasColumnType("int(11)")
                        .HasColumnName("COUNTRY_ID_1D.3.6");

                    b.Property<string>("EmployerBusinessName1d2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMPLOYER/BUSINESS_NAME_1D.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("EmployerBusinessName1d2"), "utf8mb3");

                    b.Property<DateTime?>("EndDate1d6")
                        .HasColumnType("datetime")
                        .HasColumnName("END_DATE_1D.6");

                    b.Property<float?>("GrossMonthlyIncome1d8")
                        .HasColumnType("float")
                        .HasColumnName("GROSS_MONTHLY_INCOME_1D.8");

                    b.Property<ulong?>("IsSelfEmployed1d7")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_SELF_EMPLOYED_1D.7");

                    b.Property<string>("PositionTitle1d4")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("POSITION_TITLE_1D.4")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PositionTitle1d4"), "utf8mb3");

                    b.Property<DateTime?>("StartDate1d5")
                        .HasColumnType("datetime")
                        .HasColumnName("START_DATE_1D.5");

                    b.Property<int>("StateId1d34")
                        .HasColumnType("int(11)")
                        .HasColumnName("STATE_ID_1D.3.4");

                    b.Property<string>("Street1d31")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("STREET_1D.3.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Street1d31"), "utf8mb3");

                    b.Property<string>("Unit1d32")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UNIT_1D.3.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Unit1d32"), "utf8mb3");

                    b.Property<string>("Zip1d35")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ZIP_1D.3.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Zip1d35"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID9");

                    b.HasIndex(new[] { "CityId1d33" }, "CITY_ID_1D.3.3");

                    b.HasIndex(new[] { "CountryId1d36" }, "COUNTRY_ID_1D.3.6");

                    b.HasIndex(new[] { "StateId1d34" }, "STATE_ID_1D.3.4");

                    b.ToTable("application_previous_employement_details", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.CitizenshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("CitizenshipType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CITIZENSHIP_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CitizenshipType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("citizenship_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CITY_NAME")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CityName"), "utf8mb3");

                    b.Property<int>("StateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("STATE_ID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "StateId" }, "STATE_ID")
                        .HasDatabaseName("STATE_ID1");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COUNTRY_NAME")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CountryName"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CountryName" }, "COUNTRY_NAME")
                        .IsUnique();

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.CreditType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("CreditType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CREDIT_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CreditType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("credit_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DeclarationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("DeclarationCategory1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DECLARATION_CATEGORY")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("DeclarationCategory1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("declaration_categories", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DeclarationQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("DeclarationCategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("DECLARATION_CATEGORY_ID");

                    b.Property<ulong?>("IsActive")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int?>("ParentQuestionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("PARENT_QUESTION_ID");

                    b.Property<string>("Question")
                        .HasMaxLength(9999)
                        .HasColumnType("varchar(9999)")
                        .HasColumnName("QUESTION")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Question"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DeclarationCategoryId" }, "DECLARATION_CATEGORY_ID");

                    b.ToTable("declaration_questions", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DemographicInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int?>("DemographicInfoSourceId87")
                        .HasColumnType("int(11)")
                        .HasColumnName("DEMOGRAPHIC_INFO_SOURCE_ID_8.7");

                    b.Property<string>("Ethnicity81")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ETHNICITY_8.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Ethnicity81"), "utf8mb3");

                    b.Property<string>("Gender82")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GENDER_8.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Gender82"), "utf8mb3");

                    b.Property<ulong?>("IsEthnicityByObservation84")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_ETHNICITY_BY_OBSERVATION_8.4");

                    b.Property<ulong?>("IsGenderByObservation85")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_GENDER_BY_OBSERVATION_8.5");

                    b.Property<ulong?>("IsRaceByObservation86")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_RACE_BY_OBSERVATION_8.6");

                    b.Property<string>("Race83")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RACE_8.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Race83"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID10");

                    b.HasIndex(new[] { "DemographicInfoSourceId87" }, "DEMOGRAPHIC_INFO_SOURCE_ID_8.7");

                    b.ToTable("demographic_information", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DemographicInfoSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALUE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Value"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("demographic_info_sources", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialAccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("FinancialAccountType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FINANCIAL_ACCOUNT_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FinancialAccountType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("financial_account_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialAssetsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("FinancialCreditType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FINANCIAL_CREDIT_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FinancialCreditType"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("financial_assets_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialLaibilitiesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("FinancialLaibilitiesType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FINANCIAL_LAIBILITIES_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FinancialLaibilitiesType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("financial_laibilities_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialOtherLaibilitiesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("FinancialOtherLaibilitiesType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FINANCIAL_OTHER_LAIBILITIES_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FinancialOtherLaibilitiesType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("financial_other_laibilities_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialPropertyIntendedOccupancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("FinancialPropertyIntendedOccupancy1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FINANCIAL_PROPERTY_INTENDED_OCCUPANCY")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FinancialPropertyIntendedOccupancy1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("financial_property_intended_occupancies", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialPropertyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("FinancialPropertyStatus1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FINANCIAL_PROPERTY_STATUS")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FinancialPropertyStatus1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("financial_property_status", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.HousingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("HousingType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("HOUSING_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("HousingType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("housing_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.IncomeSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("IncomeSource1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("INCOME_SOURCE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("IncomeSource1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("income_sources", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.IncomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("IncomeType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("INCOME_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("IncomeType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("income_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<int>("CityId4a33")
                        .HasColumnType("int(11)")
                        .HasColumnName("CITY_ID_4A.3.3");

                    b.Property<int>("CountryId4a36")
                        .HasColumnType("int(11)")
                        .HasColumnName("COUNTRY_ID_4A.3.6");

                    b.Property<ulong?>("FhaSecondaryResidance4a61")
                        .HasColumnType("bit(1)")
                        .HasColumnName("FHA_SECONDARY_RESIDANCE_4A.6.1");

                    b.Property<ulong?>("IsManufacturedHome4a8")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_MANUFACTURED_HOME_4A.8");

                    b.Property<ulong?>("IsMixedUseProperty4a7")
                        .HasColumnType("bit(1)")
                        .HasColumnName("IS_MIXED_USE_PROPERTY_4A.7");

                    b.Property<float?>("LoanAmount4a1")
                        .HasColumnType("float")
                        .HasColumnName("LOAN_AMOUNT_4A.1");

                    b.Property<int?>("LoanPropertyOccupancyId4a6")
                        .HasColumnType("int(11)")
                        .HasColumnName("LOAN_PROPERTY_OCCUPANCY_ID_4A.6");

                    b.Property<string>("LoanPurpose4a2")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LOAN_PURPOSE_4A.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LoanPurpose4a2"), "utf8mb3");

                    b.Property<int?>("PropertyNumberUnits4a4")
                        .HasColumnType("int(11)")
                        .HasColumnName("PROPERTY_NUMBER_UNITS_4A.4");

                    b.Property<string>("PropertyStreet4a31")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PROPERTY_STREET_4A.3.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PropertyStreet4a31"), "utf8mb3");

                    b.Property<string>("PropertyUnitNo4a32")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PROPERTY_UNIT_NO_4A.3.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PropertyUnitNo4a32"), "utf8mb3");

                    b.Property<float?>("PropertyValue4a5")
                        .HasColumnType("float")
                        .HasColumnName("PROPERTY_VALUE_4A.5");

                    b.Property<string>("PropertyZip4a35")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("PROPERTY_ZIP_4A.3.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PropertyZip4a35"), "utf8mb3");

                    b.Property<int>("StateId4a34")
                        .HasColumnType("int(11)")
                        .HasColumnName("STATE_ID_4A.3.4");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID11");

                    b.HasIndex(new[] { "CityId4a33" }, "CITY_ID_4A.3.3");

                    b.HasIndex(new[] { "CountryId4a36" }, "COUNTRY_ID_4A.3.6");

                    b.HasIndex(new[] { "LoanPropertyOccupancyId4a6" }, "LOAN_PROPERTY_OCCUPANCY_ID_4A.6");

                    b.HasIndex(new[] { "StateId4a34" }, "STATE_ID_4A.3.4");

                    b.ToTable("loan_and_property_information", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformationGift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<ulong?>("Deposited4d2")
                        .HasColumnType("bit(1)")
                        .HasColumnName("DEPOSITED_4D.2");

                    b.Property<int?>("LoanPropertyGiftTypeId4d1")
                        .HasColumnType("int(11)")
                        .HasColumnName("LOAN_PROPERTY_GIFT_TYPE_ID_4D.1");

                    b.Property<string>("Source4d3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SOURCE_4D.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Source4d3"), "utf8mb3");

                    b.Property<float?>("Value4d4")
                        .HasColumnType("float")
                        .HasColumnName("VALUE_4D.4");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID12");

                    b.HasIndex(new[] { "LoanPropertyGiftTypeId4d1" }, "LOAN_PROPERTY_GIFT_TYPE_ID_4D.1");

                    b.ToTable("loan_and_property_information_gifts", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformationOtherMortageLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<float?>("CreditAmount4b5")
                        .HasColumnType("float")
                        .HasColumnName("CREDIT_AMOUNT_4B.5");

                    b.Property<string>("CreditorName4b1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CREDITOR_NAME_4B.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CreditorName4b1"), "utf8mb3");

                    b.Property<string>("LienType4b2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LIEN_TYPE_4B.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LienType4b2"), "utf8mb3");

                    b.Property<float?>("LoanAmount4b4")
                        .HasColumnType("float")
                        .HasColumnName("LOAN_AMOUNT_4B.4");

                    b.Property<float?>("MonthlyPayment4b3")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_PAYMENT_4B.3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID13");

                    b.ToTable("loan_and_property_information_other_mortage_loan", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformationRentalIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<float?>("ExpectedMonthlyIncome4c1")
                        .HasColumnType("float")
                        .HasColumnName("EXPECTED_MONTHLY_INCOME_4C.1");

                    b.Property<float?>("LenderExpectedMonthlyIncome4c2")
                        .HasColumnType("float")
                        .HasColumnName("LENDER_EXPECTED_MONTHLY_INCOME_4C.2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID14");

                    b.ToTable("loan_and_property_information_rental_income", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanOriginatorInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("Address92")
                        .HasMaxLength(9999)
                        .HasColumnType("varchar(9999)")
                        .HasColumnName("ADDRESS_9.2")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Address92"), "utf8mb3");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<DateTime?>("Date910")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE_9.10");

                    b.Property<string>("Email98")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL_9.8")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Email98"), "utf8mb3");

                    b.Property<string>("OrganizationName91")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ORGANIZATION_NAME_9.1")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("OrganizationName91"), "utf8mb3");

                    b.Property<string>("OrganizationNmlsrId93")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ORGANIZATION_NMLSR_ID_9.3")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("OrganizationNmlsrId93"), "utf8mb3");

                    b.Property<string>("OrganizationStateLicence94")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ORGANIZATION_STATE_LICENCE_9.4")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("OrganizationStateLicence94"), "utf8mb3");

                    b.Property<string>("OriginatorName95")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ORIGINATOR_NAME_9.5")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("OriginatorName95"), "utf8mb3");

                    b.Property<string>("OriginatorNmlsrId96")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ORIGINATOR_NMLSR_ID_9.6")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("OriginatorNmlsrId96"), "utf8mb3");

                    b.Property<string>("OriginatorStateLicense97")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ORIGINATOR_STATE_LICENSE_9.7")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("OriginatorStateLicense97"), "utf8mb3");

                    b.Property<string>("Phone99")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("PHONE_9.9")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Phone99"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID15");

                    b.ToTable("loan_originator_information", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanPropertyGiftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("LoanPropertyGiftType1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LOAN_PROPERTY_GIFT_TYPE")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LoanPropertyGiftType1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("loan_property_gift_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanPropertyOccupancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("LoanPropertyOccupancy1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LOAN_PROPERTY_OCCUPANCY")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LoanPropertyOccupancy1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("loan_property_occupancies", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MaritialStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("MaritialStatus1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MARITIAL_STATUS")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("MaritialStatus1"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("maritial_status", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MilitaryService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_PERSONAL_INFORMATION_ID");

                    b.Property<ulong?>("CurrentlyServing7a2")
                        .HasColumnType("bit(1)")
                        .HasColumnName("CURRENTLY_SERVING_7A.2");

                    b.Property<DateTime?>("DateOfServiceExpiration7a3")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE_OF_SERVICE_EXPIRATION_7A.3");

                    b.Property<ulong?>("NonActivatedMember7a2")
                        .HasColumnType("bit(1)")
                        .HasColumnName("NON_ACTIVATED_MEMBER_7A.2");

                    b.Property<ulong?>("Retired7a2")
                        .HasColumnType("bit(1)")
                        .HasColumnName("RETIRED_7A.2");

                    b.Property<ulong?>("ServedInForces7a1")
                        .HasColumnType("bit(1)")
                        .HasColumnName("SERVED_IN_FORCES_7A.1");

                    b.Property<ulong?>("SurvivingSpouse7a21")
                        .HasColumnType("bit(1)")
                        .HasColumnName("SURVIVING_SPOUSE_7A.2.1");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationPersonalInformationId" }, "APPLICATION_PERSONAL_INFORMATION_ID")
                        .HasDatabaseName("APPLICATION_PERSONAL_INFORMATION_ID16");

                    b.ToTable("military_service", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MortageLoanOnProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("AccountNumber3a10")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ACCOUNT_NUMBER_3A.10")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("AccountNumber3a10"), "utf8mb3");

                    b.Property<int?>("ApplicationFinancialRealEstateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("APPLICATION_FINANCIAL_REAL_ESTATE_ID");

                    b.Property<float?>("CreditLimit3a15")
                        .HasColumnType("float")
                        .HasColumnName("CREDIT_LIMIT_3A.15");

                    b.Property<string>("CreditorName3a9")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CREDITOR_NAME_3A.9")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CreditorName3a9"), "utf8mb3");

                    b.Property<float?>("MonthlyMortagePayment3a11")
                        .HasColumnType("float")
                        .HasColumnName("MONTHLY_MORTAGE_PAYMENT_3A.11");

                    b.Property<int>("MortageLoanTypesId3a14")
                        .HasColumnType("int(11)")
                        .HasColumnName("MORTAGE_LOAN_TYPES_ID_3A.14");

                    b.Property<ulong?>("PaidOff3a13")
                        .HasColumnType("bit(1)")
                        .HasColumnName("PAID_OFF_3A.13");

                    b.Property<float?>("UnpaidBalance3a12")
                        .HasColumnType("float")
                        .HasColumnName("UNPAID_BALANCE_3A.12");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApplicationFinancialRealEstateId" }, "APPLICATION_FINANCIAL_REAL_ESTATE_ID");

                    b.HasIndex(new[] { "MortageLoanTypesId3a14" }, "MORTAGE_LOAN_TYPES_ID_3A.14");

                    b.ToTable("mortage_loan_on_properties", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MortageLoanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<string>("MortageLoanTypesId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MORTAGE_LOAN_TYPES_ID")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("MortageLoanTypesId"), "utf8mb3");

                    b.HasKey("Id");

                    b.ToTable("mortage_loan_types", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID");

                    b.Property<int>("CountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("COUNTRY_ID");

                    b.Property<string>("StateName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("STATE_NAME")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("StateName"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CountryId" }, "COUNTRY_ID")
                        .HasDatabaseName("COUNTRY_ID1");

                    b.ToTable("country_states", (string)null);
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.Application", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.CreditType", "CreditType")
                        .WithMany("Applications")
                        .HasForeignKey("CreditTypeId")
                        .IsRequired()
                        .HasConstraintName("applications_ibfk_1");

                    b.Navigation("CreditType");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationAdditionalEmployementDetail", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_additional_employement_details_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.City", "City")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("application_additional_employement_details_ibfk_4");

                    b.HasOne("LoanManagement.Entities.Models.Country", "Country")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("application_additional_employement_details_ibfk_2");

                    b.HasOne("LoanManagement.Entities.Models.State", "State")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("application_additional_employement_details_ibfk_3");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationAdditionalEmployementIncomeDetail", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationAdditionalEmployementDetail", "ApplicationAdditionalEmployementDetailsNavigation")
                        .WithMany("ApplicationAdditionalEmployementIncomeDetails")
                        .HasForeignKey("ApplicationAdditionalEmployementDetails")
                        .IsRequired()
                        .HasConstraintName("application_additional_employement_income_details_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.IncomeType", "IncomeType")
                        .WithMany("ApplicationAdditionalEmployementIncomeDetails")
                        .HasForeignKey("IncomeTypeId")
                        .IsRequired()
                        .HasConstraintName("application_additional_employement_income_details_ibfk_2");

                    b.Navigation("ApplicationAdditionalEmployementDetailsNavigation");

                    b.Navigation("IncomeType");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationDeclarationQuestion", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationDeclarationQuestions")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_declaration_questions_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.DeclarationQuestion", "DeclarationQuestion")
                        .WithMany("ApplicationDeclarationQuestions")
                        .HasForeignKey("DeclarationQuestionId")
                        .HasConstraintName("application_declaration_questions_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("DeclarationQuestion");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationEmployementDetail", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_employement_details_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.City", "CityId1b43Navigation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("CityId1b43")
                        .IsRequired()
                        .HasConstraintName("application_employement_details_ibfk_4");

                    b.HasOne("LoanManagement.Entities.Models.Country", "CountryId1b46Navigation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("CountryId1b46")
                        .IsRequired()
                        .HasConstraintName("application_employement_details_ibfk_2");

                    b.HasOne("LoanManagement.Entities.Models.State", "StateId1b44Navigation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("StateId1b44")
                        .IsRequired()
                        .HasConstraintName("application_employement_details_ibfk_3");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("CityId1b43Navigation");

                    b.Navigation("CountryId1b46Navigation");

                    b.Navigation("StateId1b44Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationEmployementIncomeDetail", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationEmployementDetail", "ApplicationEmployementDetails")
                        .WithMany("ApplicationEmployementIncomeDetails")
                        .HasForeignKey("ApplicationEmployementDetailsId")
                        .IsRequired()
                        .HasConstraintName("application_employement_income_details_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.IncomeType", "IncomeTypeId1b101Navigation")
                        .WithMany("ApplicationEmployementIncomeDetails")
                        .HasForeignKey("IncomeTypeId1b101")
                        .IsRequired()
                        .HasConstraintName("application_employement_income_details_ibfk_2");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("IncomeTypeId1b101Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialAsset", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialAssets")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_financial_assets_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.FinancialAccountType", "FinancialAccountTypeId2a1Navigation")
                        .WithMany("ApplicationFinancialAssets")
                        .HasForeignKey("FinancialAccountTypeId2a1")
                        .IsRequired()
                        .HasConstraintName("application_financial_assets_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialAccountTypeId2a1Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialLaibility", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialLaibilities")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_financial_laibilities_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.FinancialLaibilitiesType", "FinancialLaibilitiesType2c1Navigation")
                        .WithMany("ApplicationFinancialLaibilities")
                        .HasForeignKey("FinancialLaibilitiesType2c1")
                        .IsRequired()
                        .HasConstraintName("application_financial_laibilities_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialLaibilitiesType2c1Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialOtherAsset", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialOtherAssets")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_financial_other_assets_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.FinancialAssetsType", "FinancialAssetsTypesId2b1Navigation")
                        .WithMany("ApplicationFinancialOtherAssets")
                        .HasForeignKey("FinancialAssetsTypesId2b1")
                        .IsRequired()
                        .HasConstraintName("application_financial_other_assets_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialAssetsTypesId2b1Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialOtherLaibility", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialOtherLaibilities")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_financial_other_laibilities_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.FinancialOtherLaibilitiesType", "FinancialOtherLaibilitiesTypeId2d1Navigation")
                        .WithMany("ApplicationFinancialOtherLaibilities")
                        .HasForeignKey("FinancialOtherLaibilitiesTypeId2d1")
                        .IsRequired()
                        .HasConstraintName("application_financial_other_laibilities_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialOtherLaibilitiesTypeId2d1Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialRealEstate", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_financial_real_estate_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.City", "CityId3a23Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("CityId3a23")
                        .IsRequired()
                        .HasConstraintName("application_financial_real_estate_ibfk_4");

                    b.HasOne("LoanManagement.Entities.Models.Country", "CountryId3a26Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("CountryId3a26")
                        .IsRequired()
                        .HasConstraintName("application_financial_real_estate_ibfk_2");

                    b.HasOne("LoanManagement.Entities.Models.FinancialPropertyIntendedOccupancy", "FinancialPropertyIntendedOccupancyId3a5Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("FinancialPropertyIntendedOccupancyId3a5")
                        .IsRequired()
                        .HasConstraintName("application_financial_real_estate_ibfk_6");

                    b.HasOne("LoanManagement.Entities.Models.FinancialPropertyStatus", "FinancialPropertyStatusId3a4Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("FinancialPropertyStatusId3a4")
                        .IsRequired()
                        .HasConstraintName("application_financial_real_estate_ibfk_5");

                    b.HasOne("LoanManagement.Entities.Models.State", "StateId3a24Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("StateId3a24")
                        .IsRequired()
                        .HasConstraintName("application_financial_real_estate_ibfk_3");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("CityId3a23Navigation");

                    b.Navigation("CountryId3a26Navigation");

                    b.Navigation("FinancialPropertyIntendedOccupancyId3a5Navigation");

                    b.Navigation("FinancialPropertyStatusId3a4Navigation");

                    b.Navigation("StateId3a24Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationIncomeSource", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationIncomeSources")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_income_sources_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.IncomeSource", "IncomeSourceId1e1Navigation")
                        .WithMany("ApplicationIncomeSources")
                        .HasForeignKey("IncomeSourceId1e1")
                        .IsRequired()
                        .HasConstraintName("application_income_sources_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("IncomeSourceId1e1Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationPersonalInformation", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.Application", "Application")
                        .WithMany("ApplicationPersonalInformations")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.CitizenshipType", "CitizenshipTypeId1a5Navigation")
                        .WithMany("ApplicationPersonalInformations")
                        .HasForeignKey("CitizenshipTypeId1a5")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_2");

                    b.HasOne("LoanManagement.Entities.Models.City", "CurrentCityId1a133Navigation")
                        .WithMany("ApplicationPersonalInformationCurrentCityId1a133Navigations")
                        .HasForeignKey("CurrentCityId1a133")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_6");

                    b.HasOne("LoanManagement.Entities.Models.Country", "CurrentCountryId1a136Navigation")
                        .WithMany("ApplicationPersonalInformationCurrentCountryId1a136Navigations")
                        .HasForeignKey("CurrentCountryId1a136")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_4");

                    b.HasOne("LoanManagement.Entities.Models.HousingType", "CurrentHousingTypeId1a141Navigation")
                        .WithMany("ApplicationPersonalInformationCurrentHousingTypeId1a141Navigations")
                        .HasForeignKey("CurrentHousingTypeId1a141")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_7");

                    b.HasOne("LoanManagement.Entities.Models.State", "CurrentStateId1a134Navigation")
                        .WithMany("ApplicationPersonalInformationCurrentStateId1a134Navigations")
                        .HasForeignKey("CurrentStateId1a134")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_5");

                    b.HasOne("LoanManagement.Entities.Models.City", "FormerCityId1a153Navigation")
                        .WithMany("ApplicationPersonalInformationFormerCityId1a153Navigations")
                        .HasForeignKey("FormerCityId1a153")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_10");

                    b.HasOne("LoanManagement.Entities.Models.Country", "FormerCountryId1a156Navigation")
                        .WithMany("ApplicationPersonalInformationFormerCountryId1a156Navigations")
                        .HasForeignKey("FormerCountryId1a156")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_8");

                    b.HasOne("LoanManagement.Entities.Models.HousingType", "FormerHousingTypeId1a161Navigation")
                        .WithMany("ApplicationPersonalInformationFormerHousingTypeId1a161Navigations")
                        .HasForeignKey("FormerHousingTypeId1a161")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_11");

                    b.HasOne("LoanManagement.Entities.Models.State", "FormerStateId1a154Navigation")
                        .WithMany("ApplicationPersonalInformationFormerStateId1a154Navigations")
                        .HasForeignKey("FormerStateId1a154")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_9");

                    b.HasOne("LoanManagement.Entities.Models.City", "MailingCityId1a173Navigation")
                        .WithMany("ApplicationPersonalInformationMailingCityId1a173Navigations")
                        .HasForeignKey("MailingCityId1a173")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_14");

                    b.HasOne("LoanManagement.Entities.Models.Country", "MailingCountryId1a176Navigation")
                        .WithMany("ApplicationPersonalInformationMailingCountryId1a176Navigations")
                        .HasForeignKey("MailingCountryId1a176")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_12");

                    b.HasOne("LoanManagement.Entities.Models.State", "MailingStateId1a174Navigation")
                        .WithMany("ApplicationPersonalInformationMailingStateId1a174Navigations")
                        .HasForeignKey("MailingStateId1a174")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_13");

                    b.HasOne("LoanManagement.Entities.Models.MaritialStatus", "MaritialStatusId1a7Navigation")
                        .WithMany("ApplicationPersonalInformations")
                        .HasForeignKey("MaritialStatusId1a7")
                        .IsRequired()
                        .HasConstraintName("application_personal_information_ibfk_3");

                    b.Navigation("Application");

                    b.Navigation("CitizenshipTypeId1a5Navigation");

                    b.Navigation("CurrentCityId1a133Navigation");

                    b.Navigation("CurrentCountryId1a136Navigation");

                    b.Navigation("CurrentHousingTypeId1a141Navigation");

                    b.Navigation("CurrentStateId1a134Navigation");

                    b.Navigation("FormerCityId1a153Navigation");

                    b.Navigation("FormerCountryId1a156Navigation");

                    b.Navigation("FormerHousingTypeId1a161Navigation");

                    b.Navigation("FormerStateId1a154Navigation");

                    b.Navigation("MailingCityId1a173Navigation");

                    b.Navigation("MailingCountryId1a176Navigation");

                    b.Navigation("MailingStateId1a174Navigation");

                    b.Navigation("MaritialStatusId1a7Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationPreviousEmployementDetail", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("application_previous_employement_details_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.City", "CityId1d33Navigation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("CityId1d33")
                        .IsRequired()
                        .HasConstraintName("application_previous_employement_details_ibfk_4");

                    b.HasOne("LoanManagement.Entities.Models.Country", "CountryId1d36Navigation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("CountryId1d36")
                        .IsRequired()
                        .HasConstraintName("application_previous_employement_details_ibfk_2");

                    b.HasOne("LoanManagement.Entities.Models.State", "StateId1d34Navigation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("StateId1d34")
                        .IsRequired()
                        .HasConstraintName("application_previous_employement_details_ibfk_3");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("CityId1d33Navigation");

                    b.Navigation("CountryId1d36Navigation");

                    b.Navigation("StateId1d34Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.City", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("cities_ibfk_1");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DeclarationQuestion", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.DeclarationCategory", "DeclarationCategory")
                        .WithMany("DeclarationQuestions")
                        .HasForeignKey("DeclarationCategoryId")
                        .HasConstraintName("declaration_questions_ibfk_1");

                    b.Navigation("DeclarationCategory");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DemographicInformation", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("DemographicInformations")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("demographic_information_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.DemographicInfoSource", "DemographicInfoSourceId87Navigation")
                        .WithMany("DemographicInformations")
                        .HasForeignKey("DemographicInfoSourceId87")
                        .HasConstraintName("demographic_information_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("DemographicInfoSourceId87Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformation", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("LoanAndPropertyInformations")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("loan_and_property_information_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.City", "CityId4a33Navigation")
                        .WithMany("LoanAndPropertyInformations")
                        .HasForeignKey("CityId4a33")
                        .IsRequired()
                        .HasConstraintName("loan_and_property_information_ibfk_4");

                    b.HasOne("LoanManagement.Entities.Models.Country", "CountryId4a36Navigation")
                        .WithMany("LoanAndPropertyInformations")
                        .HasForeignKey("CountryId4a36")
                        .IsRequired()
                        .HasConstraintName("loan_and_property_information_ibfk_2");

                    b.HasOne("LoanManagement.Entities.Models.LoanPropertyOccupancy", "LoanPropertyOccupancyId4a6Navigation")
                        .WithMany("LoanAndPropertyInformations")
                        .HasForeignKey("LoanPropertyOccupancyId4a6")
                        .HasConstraintName("loan_and_property_information_ibfk_5");

                    b.HasOne("LoanManagement.Entities.Models.State", "StateId4a34Navigation")
                        .WithMany("LoanAndPropertyInformations")
                        .HasForeignKey("StateId4a34")
                        .IsRequired()
                        .HasConstraintName("loan_and_property_information_ibfk_3");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("CityId4a33Navigation");

                    b.Navigation("CountryId4a36Navigation");

                    b.Navigation("LoanPropertyOccupancyId4a6Navigation");

                    b.Navigation("StateId4a34Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformationGift", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("LoanAndPropertyInformationGifts")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("loan_and_property_information_gifts_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.LoanPropertyGiftType", "LoanPropertyGiftTypeId4d1Navigation")
                        .WithMany("LoanAndPropertyInformationGifts")
                        .HasForeignKey("LoanPropertyGiftTypeId4d1")
                        .HasConstraintName("loan_and_property_information_gifts_ibfk_2");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("LoanPropertyGiftTypeId4d1Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformationOtherMortageLoan", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("LoanAndPropertyInformationOtherMortageLoans")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("loan_and_property_information_other_mortage_loan_ibfk_1");

                    b.Navigation("ApplicationPersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanAndPropertyInformationRentalIncome", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("LoanAndPropertyInformationRentalIncomes")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("loan_and_property_information_rental_income_ibfk_1");

                    b.Navigation("ApplicationPersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanOriginatorInformation", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("LoanOriginatorInformations")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("loan_originator_information_ibfk_1");

                    b.Navigation("ApplicationPersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MilitaryService", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("MilitaryServices")
                        .HasForeignKey("ApplicationPersonalInformationId")
                        .HasConstraintName("military_service_ibfk_1");

                    b.Navigation("ApplicationPersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MortageLoanOnProperty", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.ApplicationFinancialRealEstate", "ApplicationFinancialRealEstate")
                        .WithMany("MortageLoanOnProperties")
                        .HasForeignKey("ApplicationFinancialRealEstateId")
                        .HasConstraintName("mortage_loan_on_properties_ibfk_1");

                    b.HasOne("LoanManagement.Entities.Models.MortageLoanType", "MortageLoanTypesId3a14Navigation")
                        .WithMany("MortageLoanOnProperties")
                        .HasForeignKey("MortageLoanTypesId3a14")
                        .IsRequired()
                        .HasConstraintName("mortage_loan_on_properties_ibfk_2");

                    b.Navigation("ApplicationFinancialRealEstate");

                    b.Navigation("MortageLoanTypesId3a14Navigation");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.State", b =>
                {
                    b.HasOne("LoanManagement.Entities.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("states_ibfk_1");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.Application", b =>
                {
                    b.Navigation("ApplicationPersonalInformations");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationAdditionalEmployementDetail", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationEmployementDetail", b =>
                {
                    b.Navigation("ApplicationEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationFinancialRealEstate", b =>
                {
                    b.Navigation("MortageLoanOnProperties");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.ApplicationPersonalInformation", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationDeclarationQuestions");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialAssets");

                    b.Navigation("ApplicationFinancialLaibilities");

                    b.Navigation("ApplicationFinancialOtherAssets");

                    b.Navigation("ApplicationFinancialOtherLaibilities");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationIncomeSources");

                    b.Navigation("ApplicationPreviousEmployementDetails");

                    b.Navigation("DemographicInformations");

                    b.Navigation("LoanAndPropertyInformationGifts");

                    b.Navigation("LoanAndPropertyInformationOtherMortageLoans");

                    b.Navigation("LoanAndPropertyInformationRentalIncomes");

                    b.Navigation("LoanAndPropertyInformations");

                    b.Navigation("LoanOriginatorInformations");

                    b.Navigation("MilitaryServices");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.CitizenshipType", b =>
                {
                    b.Navigation("ApplicationPersonalInformations");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.City", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationPersonalInformationCurrentCityId1a133Navigations");

                    b.Navigation("ApplicationPersonalInformationFormerCityId1a153Navigations");

                    b.Navigation("ApplicationPersonalInformationMailingCityId1a173Navigations");

                    b.Navigation("ApplicationPreviousEmployementDetails");

                    b.Navigation("LoanAndPropertyInformations");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.Country", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationPersonalInformationCurrentCountryId1a136Navigations");

                    b.Navigation("ApplicationPersonalInformationFormerCountryId1a156Navigations");

                    b.Navigation("ApplicationPersonalInformationMailingCountryId1a176Navigations");

                    b.Navigation("ApplicationPreviousEmployementDetails");

                    b.Navigation("LoanAndPropertyInformations");

                    b.Navigation("States");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.CreditType", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DeclarationCategory", b =>
                {
                    b.Navigation("DeclarationQuestions");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DeclarationQuestion", b =>
                {
                    b.Navigation("ApplicationDeclarationQuestions");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.DemographicInfoSource", b =>
                {
                    b.Navigation("DemographicInformations");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialAccountType", b =>
                {
                    b.Navigation("ApplicationFinancialAssets");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialAssetsType", b =>
                {
                    b.Navigation("ApplicationFinancialOtherAssets");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialLaibilitiesType", b =>
                {
                    b.Navigation("ApplicationFinancialLaibilities");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialOtherLaibilitiesType", b =>
                {
                    b.Navigation("ApplicationFinancialOtherLaibilities");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialPropertyIntendedOccupancy", b =>
                {
                    b.Navigation("ApplicationFinancialRealEstates");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.FinancialPropertyStatus", b =>
                {
                    b.Navigation("ApplicationFinancialRealEstates");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.HousingType", b =>
                {
                    b.Navigation("ApplicationPersonalInformationCurrentHousingTypeId1a141Navigations");

                    b.Navigation("ApplicationPersonalInformationFormerHousingTypeId1a161Navigations");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.IncomeSource", b =>
                {
                    b.Navigation("ApplicationIncomeSources");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.IncomeType", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementIncomeDetails");

                    b.Navigation("ApplicationEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanPropertyGiftType", b =>
                {
                    b.Navigation("LoanAndPropertyInformationGifts");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.LoanPropertyOccupancy", b =>
                {
                    b.Navigation("LoanAndPropertyInformations");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MaritialStatus", b =>
                {
                    b.Navigation("ApplicationPersonalInformations");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.MortageLoanType", b =>
                {
                    b.Navigation("MortageLoanOnProperties");
                });

            modelBuilder.Entity("LoanManagement.Entities.Models.State", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationPersonalInformationCurrentStateId1a134Navigations");

                    b.Navigation("ApplicationPersonalInformationFormerStateId1a154Navigations");

                    b.Navigation("ApplicationPersonalInformationMailingStateId1a174Navigations");

                    b.Navigation("ApplicationPreviousEmployementDetails");

                    b.Navigation("Cities");

                    b.Navigation("LoanAndPropertyInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
